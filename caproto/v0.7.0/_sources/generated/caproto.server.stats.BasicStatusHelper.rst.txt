caproto.server.stats.BasicStatusHelper
======================================


.. currentmodule:: caproto.server.stats

.. autoclass:: BasicStatusHelper

    .. if not using autodoc, add this here: automethod:: __init__

    

    

    
    
    .. list-table:: BasicStatusHelper pvproperties
        :header-rows: 1
        :widths: auto

        *  - Attribute
           - Suffix
           - Docs
           - Type
           - Notes
           - Alarm Group
    
        *  - application_directory
           - ``APP_DIR``
           - Startup directory (__main__)
           - str (:class:`waveform <caproto.server.records.WaveformFields>`)
           - 
                 **Read-only**
                 Length(255)
           - 
    
        *  - cpu_count
           - ``CPU_CNT``
           - Number of CPUs
           - int (:class:`longin <caproto.server.records.LonginFields>`)
           - 
                 **Read-only**
           - 
    
        *  - engineer
           - ``ENGINEER``
           - Who is responsible for this abomination
           - str (:class:`stringin <caproto.server.records.StringinFields>`)
           - 
                 **Read-only**
                 Length(40)
           - 
    
        *  - hostname
           - ``HOSTNAME``
           - 
           - str (:class:`stringin <caproto.server.records.StringinFields>`)
           - 
                 **Read-only**
                 Length(255)
           - 
    
        *  - kernel_version
           - ``KERNEL_VERS``
           - OS/Kernel Version
           - str (:class:`stringin <caproto.server.records.StringinFields>`)
           - 
                 **Read-only**
           - 
    
        *  - location
           - ``LOCATION``
           - 
           - str (:class:`stringin <caproto.server.records.StringinFields>`)
           - 
                 **Read-only**
                 Length(40)
           - 
    
        *  - parent_pid
           - ``PARENT_ID``
           - Parent Process ID
           - int (:class:`ai <caproto.server.records.AiFields>`)
           - 
                 **Read-only**
           - 
    
        *  - process_id
           - ``PROCESS_ID``
           - 
           - int (:class:`ai <caproto.server.records.AiFields>`)
           - 
                 **Read-only**
                 **Startup**
           - 
    
        *  - source_filename
           - ``SOURCE_FILE``
           - Top-level PVGroup source filename
           - str (:class:`waveform <caproto.server.records.WaveformFields>`)
           - 
                 **Read-only**
                 Length(255)
           - 
    
        *  - sysreset
           - ``SYSRESET``
           - IOC exit / restart (if using procServ)
           - int (:class:`sub <caproto.server.records.SubFields>`)
           - 
                 **Put**
           - 
    
        *  - version
           - ``EPICS_VERSION``
           - EPICS (caproto) version
           - str (:class:`stringin <caproto.server.records.StringinFields>`)
           - 
                 **Read-only**
           - 
    
    

    
    

    
    
    .. rubric:: Methods

    .. autosummary::
    
       ~BasicStatusHelper.group_read
       ~BasicStatusHelper.group_write
    
    

    
    
    .. rubric:: Attributes

    .. autosummary::

    
       ~BasicStatusHelper.default_values
       ~BasicStatusHelper.type_map
       ~BasicStatusHelper.type_map_read_only
    

    
    .. rubric:: pvproperty methods
    .. method:: process_id.startup(self, instance, async_lib)
        

    
    .. raw:: html

        <details>
        <summary>Source code: process_id.startup</summary>

    
    .. literalinclude:: /../../../../../miniconda/envs/test_env/lib/python3.7/site-packages/caproto/server/stats.py
        :language: python
        :linenos:
        :dedent: 0
        :lineno-start: 146
        :lines: 146-169

    .. raw:: html

        </details>
        <br/>

    